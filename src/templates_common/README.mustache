# {{projectName}}\n\n## Structure Overview\n\n![](./assets/placeholder.png)\n\n## Architecture Example\n\n\n```mermaid\ngraph LR\n  A[User] --> B[Frontend]\n  B --> C[Backend]\n  C --> D[Datastore]\n  C --> E[LLM: Ollama/Jan/LMStudio]\n```\n\n```plantuml\n@startuml\nUser -> Frontend\nFrontend -> Backend\nBackend -> Database\n@enduml\n```\n\n## Features\n- Starter routes and components\n- Local AI hooks (scripts/generation.txt + tools/call_local_model.js)\n\n## Tech Stack\n- Node.js, Vite, React, Three.js (depending on template)\n\n## File Structure\n\n```
{{projectName}}/\n├─ assets/\n├─ scripts/\n│  ├ generation.txt\n│  └ ai_overview.md\n├─ tools/\n└─ README.md\n```\n\n## Integrations\n- n8n (docker-compose optional)\n- Flowise (docker-compose optional)\n- Ollama / LMStudio / Jan — local invocation helper\n\n## Installation\n1. `cd {{projectName}}`\n2. `npm install`\n3. `npm run start:dev`\n4. `npm run generate:ai` (optional)\n\n## Next Steps\n- Replace placeholder assets in `/assets`\n- Edit `scripts/generation.txt` to customize AI prompts\n- Commit and push to your repository\n
